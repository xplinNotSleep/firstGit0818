<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnBackupPath.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>